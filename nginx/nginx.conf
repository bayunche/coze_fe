# Nginx 配置文件 - 用于生产环境API请求转发
# 统一通过80端口访问，自动转发API请求到对应的Java服务端口

events {
    worker_connections 1024;
}

http {
    # 基础配置
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # 大文件上传支持配置
    client_max_body_size 1000m;          # 最大请求体大小1000MB
    client_body_buffer_size 128k;        # 请求体缓冲区大小
    client_body_timeout 300;             # 客户端请求体超时时间（秒）
    client_header_timeout 60;            # 客户端请求头超时时间（秒）
    
    # 日志配置
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # 性能优化
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    gzip            on;
    gzip_types      text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 主服务器配置
    server {
        listen 80;
        server_name localhost;
        
        # 前端静态文件服务
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # 缓存配置
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # 文件上传API特殊配置 (支持大文件上传)
        location /api/files/ {
            proxy_pass http://host.docker.internal:1207;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 大文件上传专用配置
            client_max_body_size 1000m;      # 单独为文件上传设置1000MB限制
            proxy_connect_timeout 3600s;     # 连接超时1小时
            proxy_send_timeout 3600s;        # 发送超时1小时（大文件上传）
            proxy_read_timeout 3600s;        # 读取超时1小时
            proxy_request_buffering off;     # 关闭请求缓冲，支持流式上传
            
            # CORS 配置
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Accept, Authorization, Content-Type, X-Requested-With';
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # 甲供物资相关API转发到1207端口（去掉/api前缀） - 高优先级
        location /api/materials/partya/ {
            # 使用rewrite去掉/api前缀，然后转发
            rewrite ^/api(.*)$ $1 break;
            proxy_pass http://host.docker.internal:1207;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时配置 - 甲供物资查询可能需要较长时间
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # CORS 配置
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Accept, Authorization, Content-Type, X-Requested-With';
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # 乙供物资解析相关API转发到1207端口（不带/api前缀）
        location /api/materials/partyb/ {
            rewrite ^/api(.*)$ $1 break;
            proxy_pass http://host.docker.internal:1207;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时配置 - 乙供物资查询可能需要较长时间
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # CORS 配置
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Accept, Authorization, Content-Type, X-Requested-With';
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        location /api/materials/priceinfo {
            rewrite ^/api(.*)$ $1 break;
            proxy_pass http://host.docker.internal:1207;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时配置 - 乙供物资查询可能需要较长时间
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # CORS 配置
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Accept, Authorization, Content-Type, X-Requested-With';
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # 物资基础信息查询API转发到1207端口（带/api前缀）
        location /api/materials/base-info/ {
            proxy_pass http://host.docker.internal:1207;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时配置
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # CORS 配置
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Accept, Authorization, Content-Type, X-Requested-With';
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # 项目信息查询API转发到1207端口（去掉/api前缀） - 高优先级
        location /api/baseprojectinfo/ {
            # 使用rewrite去掉/api前缀，然后转发
            rewrite ^/api(.*)$ $1 break;
            proxy_pass http://host.docker.internal:1207;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时配置
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # CORS 配置
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Accept, Authorization, Content-Type, X-Requested-With';
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # API请求转发到1207端口 (主要业务API) - 通用匹配，优先级较低
        location /api/ {
            proxy_pass http://host.docker.internal:1207;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 流式响应支持 - 为潜在的流式API做准备
            proxy_buffering off;                    # 关闭代理缓冲
            proxy_cache off;                        # 关闭缓存
            proxy_request_buffering off;            # 关闭请求缓冲，支持流式请求
            proxy_http_version 1.1;                 # 使用HTTP/1.1支持长连接
            proxy_set_header Connection "";         # 清除Connection头，避免连接被关闭
            
            # Server-Sent Events (SSE) 流式支持
            add_header Cache-Control no-cache;      # 禁用客户端缓存
            add_header X-Accel-Buffering no;        # 禁用nginx内部缓冲
            
            # 超时配置 - 设置为1小时
            proxy_connect_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_read_timeout 3600s;
            
            # CORS 配置
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Accept, Authorization, Content-Type, X-Requested-With';
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # v1工作流API转发到1202端口 (乙供物资解析等工作流API)
        location /v1/ {
            # CORS预检请求处理 - 必须在proxy_pass之前
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header Access-Control-Allow-Headers 'Accept, Authorization, Content-Type, X-Requested-With, Cache-Control' always;
                add_header Access-Control-Max-Age 3600;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            
            proxy_pass http://host.docker.internal:1202/v1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # SSE (Server-Sent Events) 关键配置
            proxy_http_version 1.1;                        # 使用HTTP/1.1
            proxy_set_header Connection '';                # 清空Connection头，让nginx自行处理
            proxy_set_header Accept text/event-stream;     # 请求SSE格式
            
            # 关闭所有缓冲 - SSE必需
            proxy_buffering off;                           # 关闭响应缓冲
            proxy_cache off;                               # 关闭缓存
            proxy_request_buffering off;                   # 关闭请求缓冲
            
            # 保留后端的关键响应头
            proxy_pass_header Content-Type;                # 保留Content-Type
            proxy_pass_header Transfer-Encoding;           # 保留Transfer-Encoding
            proxy_pass_header Cache-Control;               # 保留Cache-Control
            
            # 分块传输支持
            chunked_transfer_encoding on;                  # 启用分块传输
            
            # 不要压缩SSE流
            gzip off;                                      # 关闭gzip压缩
            
            # 超时配置 - SSE需要长时间连接
            proxy_connect_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_read_timeout 3600s;
            send_timeout 3600s;
            
            # CORS支持 - 使用always确保所有响应都包含
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Accept, Authorization, Content-Type, X-Requested-With, Cache-Control' always;
            
            # 禁用nginx内部缓冲
            add_header X-Accel-Buffering no always;
        }
        
        # 后端工作流API转发到1202端口 (对话流、工作流API)
        location /backend-api/ {
            proxy_pass http://host.docker.internal:1202/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 流式响应支持 - 关键配置
            proxy_buffering off;                    # 关闭代理缓冲
            proxy_cache off;                        # 关闭缓存
            proxy_request_buffering off;            # 关闭请求缓冲，支持流式请求
            proxy_http_version 1.1;                 # 使用HTTP/1.1支持长连接
            proxy_set_header Connection "";         # 清除Connection头，避免连接被关闭
            
            # Server-Sent Events (SSE) 流式支持
            add_header Cache-Control no-cache;      # 禁用客户端缓存
            add_header X-Accel-Buffering no;        # 禁用nginx内部缓冲
            
            # 超时配置 - 设置为1小时
            proxy_connect_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_read_timeout 3600s;
            
            # CORS 配置
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Accept, Authorization, Content-Type, X-Requested-With';
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}